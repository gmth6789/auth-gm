{"version":3,"file":"login-e0d0e469.js","sources":["../../../../utils/vee-validate-rules.ts","../../../../components/TextInput.vue","../../../../pages/login.vue"],"sourcesContent":["import { defineRule } from 'vee-validate';\nimport { required, email, min } from '@vee-validate/rules';\ndefineRule('required', required);\ndefineRule('email', email);\ndefineRule('min', min);","<template>\n  <div class=\"TextInput\" :class=\"{ 'has-error': !!errorMessage, success: meta.valid }\">\n    <label :for=\"name\">{{ label }}</label>\n    <input\n      :name=\"name\"\n      :id=\"name\"\n      :type=\"type\"\n      :value=\"inputValue\"\n      :placeholder=\"placeholder\"\n      @input=\"handleChange\"\n      @blur=\"handleBlur\"\n      class=\"p-inputtext p-component\"\n    />\n    <p class=\"help-message\" v-show=\"errorMessage || meta.valid\">\n      {{ errorMessage || successMessage }}\n    </p>\n  </div>\n</template>\n\n<script>\nimport { toRef } from 'vue'\nimport { useField } from 'vee-validate'\n\nexport default {\n  props: {\n    type: {\n      type: String,\n      default: 'text'\n    },\n    value: {\n      type: String,\n      default: ''\n    },\n    name: {\n      type: String,\n      required: true\n    },\n    label: {\n      type: String,\n      required: true\n    },\n    successMessage: {\n      type: String,\n      default: ''\n    },\n    placeholder: {\n      type: String,\n      default: ''\n    }\n  },\n  setup(props) {\n    // use `toRef` to create reactive references to `name` prop which is passed to `useField`\n    // this is important because vee-validte needs to know if the field name changes\n    // https://vee-validate.logaretm.com/v4/guide/composition-api/caveats\n    const name = toRef(props, 'name')\n\n    // we don't provide any rules here because we are using form-level validation\n    // https://vee-validate.logaretm.com/v4/guide/validation#form-level-validation\n    const {\n      value: inputValue,\n      errorMessage,\n      handleBlur,\n      handleChange,\n      meta\n    } = useField(name, undefined, {\n      initialValue: props.value\n    })\n\n    return {\n      handleChange,\n      handleBlur,\n      errorMessage,\n      inputValue,\n      meta\n    }\n  }\n}\n</script>\n\n<style scoped>\n.TextInput {\n  position: relative;\n  margin-bottom: calc(1em * 1.5);\n  width: 100%;\n}\n\nlabel {\n  display: block;\n  margin-bottom: 4px;\n  width: 100%;\n}\n\ninput {\n  border-radius: 5px;\n  padding: 15px 10px;\n  outline: none;\n  width: 100%;\n  transition: border-color 0.3s ease-in-out, color 0.3s ease-in-out,\n    background-color 0.3s ease-in-out;\n}\n\ninput:focus {\n  border-color: var(--primary-color);\n}\n\n.help-message {\n  position: absolute;\n  bottom: calc(-1.5 * 1em);\n  left: 0;\n  margin: 0;\n  font-size: 14px;\n}\n\n.TextInput.has-error input {\n  background-color: var(--error-bg-color);\n  color: var(--error-color);\n}\n\n.TextInput.has-error input:focus {\n  border-color: var(--error-color);\n}\n\n.TextInput.has-error .help-message {\n  color: var(--error-color);\n}\n\n.TextInput.success input {\n  background-color: var(--success-bg-color);\n  color: var(--success-color);\n}\n\n.TextInput.success input:focus {\n  border-color: var(--success-color);\n}\n\n.TextInput.success .help-message {\n  color: var(--success-color);\n}\n</style>\n","<template>\n  <div class=\"flex align-items-center justify-content-center overflow-hidden\">\n    <div class=\"grid justify-content-center p-2 lg:p-0\" style=\"min-width: 80%\">\n      <div\n        class=\"col-12 xl:col-6\"\n        style=\"\n          border-radius: 56px;\n          padding: 0.3rem;\n          background: linear-gradient(180deg, var(--primary-color), rgba(33, 150, 243, 0) 30%);\n        \"\n      >\n        <div\n          class=\"h-full w-full m-0 py-7 px-4\"\n          style=\"\n            border-radius: 53px;\n            background: linear-gradient(180deg, var(--surface-50) 38.9%, var(--surface-0));\n          \"\n        >\n          <!-- <div class=\"text-center mb-5\" v-if=\"user\">\n            <div class=\"text-900 text-3xl font-medium mb-3\">Welcome, {{ user.email }}!</div>\n            <span class=\"text-600 font-medium\">Sign in to continue</span>\n          </div> -->\n\n          <div class=\"w-full md:w-10 mx-auto\">\n            <Form @submit=\"onSubmit\" :validation-schema=\"schema\" @invalid-submit=\"onInvalidSubmit\">\n              <TextInput\n                name=\"email\"\n                type=\"email\"\n                label=\"E-mail\"\n                placeholder=\"Your email address\"\n                success-message=\"Got it, we won't spam you!\"\n              />\n              <TextInput\n                name=\"password\"\n                type=\"password\"\n                label=\"Password\"\n                placeholder=\"Your password\"\n                success-message=\"Nice and secure!\"\n              />\n              <Button\n                :label=\"disabled ? 'กรุณารอสักครู่...' : 'Sign in'\"\n                class=\"w-full p-3 text-xl submit-btn\"\n                ref=\"submitBtn\"\n                type=\"submit\"\n                :disabled=\"disabled\"\n              />\n            </Form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script lang=\"ts\" setup>\nimport { Form } from 'vee-validate'\nimport '~/utils/vee-validate-rules'\nimport { User } from '~/models/User'\nimport { signInWithEmailAndPassword } from 'firebase/auth'\nimport TextInput from '~/components/TextInput.vue'\n\nconst { $toast, $firebaseAuth } = useNuxtApp()\nconst user$ = useUser()\nconst disabled = ref(false)\nconst signinForm = ref({ email: '', password: '' })\nconst submitBtn = ref()\nconst token = useCookie('token')\n\nconst schema = ref({\n  email: 'required|email',\n  password: 'required|min:8'\n})\n\nconst signin = async () => {\n  if (signinForm.value.email || signinForm.value.password) disabled.value = true\n  try {\n    const { user } = await signInWithEmailAndPassword(\n      $firebaseAuth,\n      signinForm.value.email,\n      signinForm.value.password\n    )\n    user$.value = user as User\n    token.value = user$.value.accessToken || ''\n    navigateTo('/')\n  } catch (error) {\n    $toast.add({ severity: 'error', summary: 'Error Message', detail: error, life: 3000 })\n    signinForm.value = { email: '', password: '' }\n    disabled.value = false\n  }\n}\n\nfunction onSubmit({ email = '', password = '' }) {\n  signinForm.value = { email, password }\n  signin()\n}\n\nfunction onInvalidSubmit() {\n  submitBtn.value.classList.add('invalid')\n  setTimeout(() => {\n    submitBtn.value.classList.remove('invalid')\n  }, 1000)\n}\n</script>\n<style>\n.submit-btn {\n  background: var(--primary-color);\n  outline: none;\n  border: none;\n  color: #fff;\n  font-size: 18px;\n  padding: 10px 15px;\n  display: block;\n  width: 100%;\n  border-radius: 7px;\n  margin-top: 40px;\n  transition: transform 0.3s ease-in-out;\n  cursor: pointer;\n}\n\n.submit-btn.invalid {\n  animation: shake 0.5s;\n  /* When the animation is finished, start again */\n  animation-iteration-count: infinite;\n}\n\n@keyframes shake {\n  0% {\n    transform: translate(1px, 1px);\n  }\n  10% {\n    transform: translate(-1px, -2px);\n  }\n  20% {\n    transform: translate(-3px, 0px);\n  }\n  30% {\n    transform: translate(3px, 2px);\n  }\n  40% {\n    transform: translate(1px, -1px);\n  }\n  50% {\n    transform: translate(-1px, 2px);\n  }\n  60% {\n    transform: translate(-3px, 1px);\n  }\n  70% {\n    transform: translate(3px, 1px);\n  }\n  80% {\n    transform: translate(-1px, -1px);\n  }\n  90% {\n    transform: translate(1px, 2px);\n  }\n  100% {\n    transform: translate(1px, -2px);\n  }\n}\n\n.submit-btn:hover {\n  transform: scale(1.1);\n}\n</style>\n"],"names":["_sfc_main","_ssrRenderAttr","_ssrInterpolate","email"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAEA,WAAW,YAAY,QAAQ;AAC/B,WAAW,SAAS,KAAK;AACzB,WAAW,OAAO,GAAG;;ACmBrB,MAAKA,cAAU;AAAA,EACb,OAAO;AAAA,IACL,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,SAAS;AAAA,IACV;AAAA,IACD,OAAO;AAAA,MACL,MAAM;AAAA,MACN,SAAS;AAAA,IACV;AAAA,IACD,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,UAAU;AAAA,IACX;AAAA,IACD,OAAO;AAAA,MACL,MAAM;AAAA,MACN,UAAU;AAAA,IACX;AAAA,IACD,gBAAgB;AAAA,MACd,MAAM;AAAA,MACN,SAAS;AAAA,IACV;AAAA,IACD,aAAa;AAAA,MACX,MAAM;AAAA,MACN,SAAS;AAAA,IACX;AAAA,EACD;AAAA,EACD,MAAM,OAAO;AAIX,UAAM,OAAO,MAAM,OAAO,MAAM;AAIhC,UAAM;AAAA,MACJ,OAAO;AAAA,MACP;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,QACE,SAAS,MAAM,QAAW;AAAA,MAC5B,cAAc,MAAM;AAAA,KACrB;AAED,WAAO;AAAA,MACL;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,EACF;AACF;;;IA3EO,QAAM,aAAW,EAAA,aAAA,CAAA,CAA0B,qBAAuB,SAAA,OAAA,KAAK,MAAK,CAAA;AAAA,uCACvEC,cAAA,OAAK,OAAI,IAAA,oCAAK,OAAK,KAAA,kBAExBA,cAAA,QAAM,OAAI,IAAA,IACVA,cAAA,MAAI,OAAI,IAAA,IACRA,cAAA,QAAM,OAAI,IAAA,IACVA,cAAA,SAAO,OAAU,UAAA,IACjBA,cAAA,eAAa,OAAW,WAAA,mGAKK,OAAY,gBAAI,OAAI,KAAC,QAAK,OAAA,EAAA,SAAA,QAAA,sBACrDC,eAAA,OAAA,gBAAgB,OAAc,cAAA;;;;;;;;;;;;;AC8CvC,UAAM,EAAE,QAAQ,cAAc,IAAI,WAAW;AAC7C,UAAM,QAAQ;AACR,UAAA,WAAW,IAAI,KAAK;AAC1B,UAAM,aAAa,IAAI,EAAE,OAAO,IAAI,UAAU,IAAI;AAClD,UAAM,YAAY;AACZ,UAAA,QAAQ,UAAU,OAAO;AAE/B,UAAM,SAAS,IAAI;AAAA,MACjB,OAAO;AAAA,MACP,UAAU;AAAA,IAAA,CACX;AAED,UAAM,SAAS,YAAY;AACzB,UAAI,WAAW,MAAM,SAAS,WAAW,MAAM;AAAU,iBAAS,QAAQ;AACtE,UAAA;AACI,cAAA,EAAE,KAAK,IAAI,MAAM;AAAA,UACrB;AAAA,UACA,WAAW,MAAM;AAAA,UACjB,WAAW,MAAM;AAAA,QAAA;AAEnB,cAAM,QAAQ;AACR,cAAA,QAAQ,MAAM,MAAM,eAAe;AACzC,mBAAW,GAAG;AAAA,eACP;AACA,eAAA,IAAI,EAAE,UAAU,SAAS,SAAS,iBAAiB,QAAQ,OAAO,MAAM,IAAM,CAAA;AACrF,mBAAW,QAAQ,EAAE,OAAO,IAAI,UAAU;AAC1C,iBAAS,QAAQ;AAAA,MACnB;AAAA,IAAA;AAGF,aAAS,SAAS,EAAE,OAAAC,SAAQ,IAAI,WAAW,MAAM;AACpC,iBAAA,QAAQ,EAAE,OAAAA,QAAO,SAAS;AAC9B;IACT;AAEA,aAAS,kBAAkB;AACf,gBAAA,MAAM,UAAU,IAAI,SAAS;AACvC,iBAAW,MAAM;AACL,kBAAA,MAAM,UAAU,OAAO,SAAS;AAAA,SACzC,GAAI;AAAA,IACT;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}